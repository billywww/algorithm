#include<stdio.h>
#define left(x) (2*x+1)
#define right(x) (2*x+2)
#define parent(x) x/2

int exchange(int *a, int *b) {
	int temp;
	temp = *a;
	*a = *b;
	*b = temp;
	return 1;
}

int heapify(int *a, int i,int n) {
	int max;
	int l = left(i);
	int r = right(i);
	if (l < n&&a[l] > a[i])
		max = l;
	else
		max = i;
	if (r < n&&a[r] > a[max])
		max = r;
	if (max != i) {
		exchange(&a[max], &a[i]);
		heapify(a, max, n);
	}
	return 1;
}
int sort(int *a,int n) {
	int i;
	if (n > 1) {
		for (i = n / 2 - 1; i >= 0; i--) {
			heapify(a, i, n);
		}
	}
	while(n != 1) {
		exchange(&a[0], &a[n-1]);
		heapify(a, 0, --n);
	}
	return 1;
}

int main() {
	int a[1440] = { 2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 ,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 ,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 ,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 ,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 ,
		2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,
		3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,
		4,6,8,10,9,7,5,3,1,4,6,8,3,1,2,4,6,8,10,9,7,5,3,1,4,6,8,3,1 };
	sort(a, 1440);
	int k = 0;
	while (k < 1440) {
		printf("%d ", a[k]);
		k++;
		if (!(k % 10)) {
			printf("\n");
		}
	}
	getchar();
	return 0;
}